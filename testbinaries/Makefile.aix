#/*----------------------------------------------------------------------------*/
#/*                                                                            */
#/* Copyright (c) 2008 Rexx Language Association. All rights reserved.         */
#/*                                                                            */
#/* This program and the accompanying materials are made available under       */
#/* the terms of the Common Public License v1.0 which accompanies this         */
#/* distribution. A copy is also available at the following address:           */
#/* http://www.oorexx.org/license.html                                         */
#/*                                                                            */
#/* Redistribution and use in source and binary forms, with or                 */
#/* without modification, are permitted provided that the following            */
#/* conditions are met:                                                        */
#/*                                                                            */
#/* Redistributions of source code must retain the above copyright             */
#/* notice, this list of conditions and the following disclaimer.              */
#/* Redistributions in binary form must reproduce the above copyright          */
#/* notice, this list of conditions and the following disclaimer in            */
#/* the documentation and/or other materials provided with the distribution.   */
#/*                                                                            */
#/* Neither the name of Rexx Language Association nor the names                */
#/* of its contributors may be used to endorse or promote products             */
#/* derived from this software without specific prior written permission.      */
#/*                                                                            */
#/* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS        */
#/* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT          */
#/* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS          */
#/* FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT   */
#/* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,      */
#/* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED   */
#/* TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,        */
#/* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY     */
#/* OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING    */
#/* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS         */
#/* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.               */
#/*                                                                            */
#/*----------------------------------------------------------------------------*/


# Setup
ORXLFLAGS = -bexpall -G
ORXCFLAGS = -M -DHAVE_CONFIG_H -DORX_SYS_STR="AIX" -DORX_SHARED_LIBRARY_EXT=".so" -qchars=unsigned -qnodigraph -DPTHREAD_KERNEL -D_POSIX_THREAD -D_REENTRANT -D_GNU_SOURCE -DOPSYS_AIX43 -DAIX -DOPSYS_AIX
ORXCXXFLAGS = -+ -M -DHAVE_CONFIG_H -DORX_SYS_STR="AIX" -DORX_SHARED_LIBRARY_EXT=".so" -qchars=unsigned -qnodigraph -DPTHREAD_KERNEL -D_POSIX_THREAD -D_REENTRANT -D_GNU_SOURCE -DOPSYS_AIX43 -DAIX -DOPSYS_AIX
COMMON_SRC_DEPS =
FUNCTION_SRC_DEPS = $(COMMON_SRC_DEPS)
METHOD_SRC_DEPS = $(COMMON_SRC_DEPS)

ifdef OOREXX_BUILD_HOME
REXX_INCLUDES = -I $(OOREXX_BUILD_HOME)/api -I $(OOREXX_BUILD_HOME)/api/platform/unix
REXX_LIBS = -L$(OOREXX_BUILD_HOME)/.libs
else
ifdef REXX_HOME
REXX_INCLUDES = -I $(REXX_HOME)/include
REXX_LIBS = -L$(REXX_HOME)/lib/ooRexx
endif
endif

# The destination for libraries
ifndef OOTEST_BIN_DIR
OOTEST_BIN_DIR = ../../bin/AIX
endif

# Build the libraries
all: $(OOTEST_BIN_DIR)/liborxfunction.so $(OOTEST_BIN_DIR)/liborxmethod.so \
     $(OOTEST_BIN_DIR)/liborxclassic.so $(OOTEST_BIN_DIR)/liborxclassic1.so \
     $(OOTEST_BIN_DIR)/liborxexits.so $(OOTEST_BIN_DIR)/liborxinvocation.so \
     $(OOTEST_BIN_DIR)/rexxinstance

$(OOTEST_BIN_DIR)/liborxfunction.so: liborxfunction.so
	cp liborxfunction.so $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)/liborxmethod.so: liborxmethod.so
	cp liborxmethod.so $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)/liborxclassic.so: liborxclassic.so
	cp liborxclassic.so $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)/liborxclassic1.so: liborxclassic1.so
	cp liborxclassic1.so $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)/liborxexits.so: liborxexits.so
	cp liborxexits.so $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)/liborxinvocation.so: liborxinvocation.so
	cp liborxinvocation.so $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)/rexxinstance: rexxinstance
	cp rexxinstance $(OOTEST_BIN_DIR)


# Build the shared library
liborxfunction.so: orxfunction.o
	xlC_r $(ORXLFLAGS) $(REXX_LIBS) -lrexx -lrexxapi -o liborxfunction.so orxfunction.o

# Build the objects
orxfunction.o: orxfunction.cpp $(FUNCTION_SRC_DEPS)
	xlC_r -c $(ORXCXXFLAGS) $(REXX_INCLUDES) orxfunction.cpp


# Build the shared library
liborxmethod.so: orxmethod.o
	xlC_r $(ORXLFLAGS) $(REXX_LIBS) -lrexx -lrexxapi -o liborxmethod.so orxmethod.o

# Build the objects
orxmethod.o: orxmethod.cpp $(METHOD_SRC_DEPS)
	xlC_r -c $(ORXCXXFLAGS) $(REXX_INCLUDES) orxmethod.cpp

# Build the objects
orxclassicexits.o: orxclassicexits.cpp
	xlC_r -c $(ORXCXXFLAGS) $(REXX_INCLUDES) orxclassicexits.cpp

# Build the objects
orxinstance.o: orxinstance.cpp
	xlC_r -c $(ORXCXXFLAGS) $(REXX_INCLUDES) orxinstance.cpp

# Build the objects
orxinvocation.o: orxinvocation.cpp  orxexits.hpp
	xlC_r -c $(ORXCFLAGS) $(REXX_INCLUDES) orxinvocation.cpp

# Build the objects
orxclassic1.o: orxclassic1.c $(FUNCTION_SRC_DEPS)
	xlc_r -c $(ORXCFLAGS) $(REXX_INCLUDES) orxclassic1.c

# Build the shared library
liborxclassic.so: orxclassic.o
	xlC_r $(ORXLFLAGS) $(REXX_LIBS) -lrexx -lrexxapi -o liborxclassic.so orxclassic.o

# Build the objects
orxclassic.o: orxclassic.cpp $(FUNCTION_SRC_DEPS)
	xlC_r -c $(ORXCXXFLAGS) $(REXX_INCLUDES) orxclassic.cpp

# Build the shared library
liborxclassic1.so: orxclassic1.o
	xlc_r $(ORXLFLAGS) $(REXX_LIBS) -lrexx -lrexxapi -o liborxclassic1.so orxclassic1.o

# Build the shared library
liborxexits.so: orxclassicexits.o orxinstance.o
	xlC_r $(ORXLFLAGS) $(REXX_LIBS) -lrexx -lrexxapi -o liborxexits.so orxclassicexits.o orxinstance.o

# Build the shared library
liborxinvocation.so: orxinvocation.o
	xlC_r $(ORXLFLAGS) $(REXX_LIBS) -lrexx -lrexxapi -L. -lorxexits -o liborxinvocation.so orxinvocation.o

# Build the objects
rexxinstance.o: rexxinstance.cpp orxexits.hpp
	xlC_r -c $(ORXCXXFLAGS) $(REXX_INCLUDES) rexxinstance.cpp

# Build the binary
rexxinstance: rexxinstance.o
	xlC_r $(REXX_LIBS) -ldl -lpthread -Wl,-binitfini:_init:_fini -Wl,-brtl -L. -lorxexits -lrexx -lrexxapi rexxinstance.o -o rexxinstance

clean:
	rm -f *.so *.o rexxinstance $(OOTEST_BIN_DIR)/lib*.so

mostly-clean:
	rm -f *.so *.o rexxinstance
