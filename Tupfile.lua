tup.include(TOP.."tools/tup/"..tup.getconfig("ARCHITECTURE")..".lua")

sourcesLibrexx = {
    "common/platform/unix/SysFile.cpp",
    "common/platform/unix/SysLibrary.cpp",
    "common/platform/unix/SysSemaphore.cpp",
    "common/platform/unix/SysThread.cpp",
    
    "common/Utilities.cpp",
    
    --"extensions/hostemu/cmdparse.cpp",
    --"extensions/hostemu/platform/unix/hostemu.cpp",
    
    --"extensions/orxncurses/orxncurses.cpp",
    
    --"extensions/platform/unix/rxunixsys/rxunixsys.cpp",
    
    --"extensions/rexxutil/platform/unix/rexxutil.cpp",
    
    --"extensions/rxmath/rxmath.cpp",
    
    --"extensions/rxregexp/automaton.cpp",
    --"extensions/rxregexp/dblqueue.cpp",
    --"extensions/rxregexp/rxregexp.cpp",
    
    --"extensions/rxsock/orxsock6.cpp",
    --"extensions/rxsock/rxsock.cpp",
    --"extensions/rxsock/rxsockfn.cpp",
    
    "interpreter/api/CallContextStubs.cpp",
    "interpreter/api/InterpreterAPI.cpp",
    "interpreter/api/InterpreterInstanceStubs.cpp",
    "interpreter/api/MethodContextStubs.cpp",
    "interpreter/api/ThreadContextStubs.cpp",
    "interpreter/behaviour/MethodDictionary.cpp",
    "interpreter/behaviour/PrimitiveBehaviours.cpp",
    "interpreter/behaviour/RexxBehaviour.cpp",
    "interpreter/behaviour/VirtualFunctionTable.cpp",
    "interpreter/classes/ArrayClass.cpp",
    "interpreter/classes/BagClass.cpp",
    "interpreter/classes/BufferClass.cpp",
    "interpreter/classes/ClassClass.cpp",
    "interpreter/classes/ContextClass.cpp",
    "interpreter/classes/DirectoryClass.cpp",
    "interpreter/classes/IdentityTableClass.cpp",
    "interpreter/classes/IntegerClass.cpp",
    "interpreter/classes/ListClass.cpp",
    "interpreter/classes/MessageClass.cpp",
    "interpreter/classes/MethodClass.cpp",
    "interpreter/classes/MutableBufferClass.cpp",
    "interpreter/classes/NumberStringClass.cpp",
    "interpreter/classes/NumberStringMath2.cpp",
    "interpreter/classes/NumberStringMath.cpp",
    "interpreter/classes/ObjectClass.cpp",
    "interpreter/classes/PackageClass.cpp",
    "interpreter/classes/PointerClass.cpp",
    "interpreter/classes/QueueClass.cpp",
    "interpreter/classes/RelationClass.cpp",
    "interpreter/classes/RexxInfoClass.cpp",
    "interpreter/classes/RexxQueueMethods.cpp",
    "interpreter/classes/RoutineClass.cpp",
    "interpreter/classes/SetClass.cpp",
    "interpreter/classes/StackFrameClass.cpp",
    "interpreter/classes/StemClass.cpp",
    "interpreter/classes/StringClassBit.cpp",
    "interpreter/classes/StringClassConversion.cpp",
    "interpreter/classes/StringClass.cpp",
    "interpreter/classes/StringClassMisc.cpp",
    "interpreter/classes/StringClassSub.cpp",
    "interpreter/classes/StringClassUtil.cpp",
    "interpreter/classes/StringClassWord.cpp",
    "interpreter/classes/StringTableClass.cpp",
    "interpreter/classes/SupplierClass.cpp",
    "interpreter/classes/support/CompoundTableElement.cpp",
    "interpreter/classes/support/CompoundVariableTable.cpp",
    "interpreter/classes/support/CompoundVariableTail.cpp",
    "interpreter/classes/support/HashCollection.cpp",
    "interpreter/classes/support/HashContents.cpp",
    "interpreter/classes/support/ListContents.cpp",
    "interpreter/classes/support/ProgramMetaData.cpp",
    "interpreter/classes/support/RexxDateTime.cpp",
    "interpreter/classes/support/StringUtil.cpp",
    "interpreter/classes/TableClass.cpp",
    "interpreter/classes/WeakReferenceClass.cpp",
    "interpreter/concurrency/ActivationFrame.cpp",
    "interpreter/concurrency/Activity.cpp",
    "interpreter/concurrency/ActivityDispatcher.cpp",
    "interpreter/concurrency/ActivityManager.cpp",
    "interpreter/concurrency/CallbackDispatcher.cpp",
    "interpreter/concurrency/CommandHandler.cpp",
    "interpreter/concurrency/ExitHandler.cpp",
    "interpreter/concurrency/MessageDispatcher.cpp",
    "interpreter/concurrency/RexxStartDispatcher.cpp",
    "interpreter/concurrency/TranslateDispatcher.cpp",
    "interpreter/concurrency/TrappingDispatcher.cpp",
    "interpreter/execution/ActivationStack.cpp",
    "interpreter/execution/BaseCode.cpp",
    "interpreter/execution/BaseExecutable.cpp",
    "interpreter/execution/CPPCode.cpp",
    "interpreter/execution/NativeActivation.cpp",
    "interpreter/execution/NativeCode.cpp",
    "interpreter/execution/RexxActivation.cpp",
    "interpreter/execution/RexxCode.cpp",
    "interpreter/execution/RexxLocalVariables.cpp",
    "interpreter/execution/RexxVariable.cpp",
    "interpreter/execution/SecurityManager.cpp",
    "interpreter/execution/TraceSetting.cpp",
    "interpreter/execution/TrapHandler.cpp",
    "interpreter/execution/VariableDictionary.cpp",
    "interpreter/expression/BuiltinFunctions.cpp",
    "interpreter/expression/CommonExternalFunctions.cpp",
    "interpreter/expression/ExpressionClassResolver.cpp",
    "interpreter/expression/ExpressionCompoundVariable.cpp",
    "interpreter/expression/ExpressionDotVariable.cpp",
    "interpreter/expression/ExpressionFunction.cpp",
    "interpreter/expression/ExpressionList.cpp",
    "interpreter/expression/ExpressionLogical.cpp",
    "interpreter/expression/ExpressionMessage.cpp",
    "interpreter/expression/ExpressionOperator.cpp",
    "interpreter/expression/ExpressionQualifiedFunction.cpp",
    "interpreter/expression/ExpressionStack.cpp",
    "interpreter/expression/ExpressionStem.cpp",
    "interpreter/expression/ExpressionVariable.cpp",
    "interpreter/expression/IndirectVariableReference.cpp",
    "interpreter/instructions/AddressInstruction.cpp",
    "interpreter/instructions/AssignmentInstruction.cpp",
    "interpreter/instructions/BaseDoInstruction.cpp",
    "interpreter/instructions/CallInstruction.cpp",
    "interpreter/instructions/ClassDirective.cpp",
    "interpreter/instructions/CommandInstruction.cpp",
    "interpreter/instructions/ControlledDoInstruction.cpp",
    "interpreter/instructions/DoBlockComponents.cpp",
    "interpreter/instructions/DoBlock.cpp",
    "interpreter/instructions/DoCountInstruction.cpp",
    "interpreter/instructions/DoForeverInstruction.cpp",
    "interpreter/instructions/DoOverInstruction.cpp",
    "interpreter/instructions/DoWhileInstruction.cpp",
    "interpreter/instructions/DoWithInstruction.cpp",
    "interpreter/instructions/DropInstruction.cpp",
    "interpreter/instructions/ElseInstruction.cpp",
    "interpreter/instructions/EndIf.cpp",
    "interpreter/instructions/EndInstruction.cpp",
    "interpreter/instructions/ExitInstruction.cpp",
    "interpreter/instructions/ExposeInstruction.cpp",
    "interpreter/instructions/ForwardInstruction.cpp",
    "interpreter/instructions/GuardInstruction.cpp",
    "interpreter/instructions/IfInstruction.cpp",
    "interpreter/instructions/InterpretInstruction.cpp",
    "interpreter/instructions/LabelInstruction.cpp",
    "interpreter/instructions/LeaveInstruction.cpp",
    "interpreter/instructions/LibraryDirective.cpp",
    "interpreter/instructions/MessageInstruction.cpp",
    "interpreter/instructions/NopInstruction.cpp",
    "interpreter/instructions/NumericInstruction.cpp",
    "interpreter/instructions/OptionsInstruction.cpp",
    "interpreter/instructions/OtherwiseInstruction.cpp",
    "interpreter/instructions/ParseInstruction.cpp",
    "interpreter/instructions/ParseTarget.cpp",
    "interpreter/instructions/ParseTrigger.cpp",
    "interpreter/instructions/ProcedureInstruction.cpp",
    "interpreter/instructions/QueueInstruction.cpp",
    "interpreter/instructions/RaiseInstruction.cpp",
    "interpreter/instructions/ReplyInstruction.cpp",
    "interpreter/instructions/RequiresDirective.cpp",
    "interpreter/instructions/ReturnInstruction.cpp",
    "interpreter/instructions/RexxInstruction.cpp",
    "interpreter/instructions/SayInstruction.cpp",
    "interpreter/instructions/SelectInstruction.cpp",
    "interpreter/instructions/SignalInstruction.cpp",
    "interpreter/instructions/SimpleDoInstruction.cpp",
    "interpreter/instructions/ThenInstruction.cpp",
    "interpreter/instructions/TraceInstruction.cpp",
    "interpreter/instructions/UseInstruction.cpp",
    "interpreter/instructions/UseLocalInstruction.cpp",
    "interpreter/instructions/WhenCaseInstruction.cpp",
    "interpreter/memory/DeadObject.cpp",
    "interpreter/memory/Envelope.cpp",
    "interpreter/memory/GlobalNames.cpp",
    "interpreter/memory/InternalStack.cpp",
    "interpreter/memory/MapBucket.cpp",
    "interpreter/memory/MapTable.cpp",
    "interpreter/memory/MemorySegment.cpp",
    "interpreter/memory/MemoryStack.cpp",
    "interpreter/memory/MemoryStats.cpp",
    "interpreter/memory/NumberArray.cpp",
    "interpreter/memory/PointerBucket.cpp",
    "interpreter/memory/PointerTable.cpp",
    "interpreter/memory/ProtectedObject.cpp",
    "interpreter/memory/RexxMemory.cpp",
    "interpreter/memory/Setup.cpp",
    "interpreter/memory/SmartBuffer.cpp",
    "interpreter/memory/UninitDispatcher.cpp",
    "interpreter/package/LibraryPackage.cpp",
    "interpreter/package/PackageManager.cpp",
    "interpreter/parser/Clause.cpp",
    "interpreter/parser/DirectiveParser.cpp",
    "interpreter/parser/InstructionParser.cpp",
    "interpreter/parser/KeywordConstants.cpp",
    "interpreter/parser/LanguageParser.cpp",
    "interpreter/parser/ProgramSource.cpp",
    "interpreter/parser/Scanner.cpp",
    "interpreter/parser/Token.cpp",
    "interpreter/platform/unix/ErrorMessages.cpp",
    "interpreter/platform/unix/ExternalFunctions.cpp",
    "interpreter/platform/unix/FileSystem.cpp",
    "interpreter/platform/unix/MemorySupport.cpp",
    "interpreter/platform/unix/MiscSystem.cpp",
    "interpreter/platform/unix/RexxMain.cpp",
    "interpreter/platform/unix/SysActivity.cpp",
    "interpreter/platform/unix/SysFileSystem.cpp",
    "interpreter/platform/unix/SysInterpreterInstance.cpp",
    "interpreter/platform/unix/SystemCommands.cpp",
    "interpreter/platform/unix/SystemInitialization.cpp",
    "interpreter/platform/unix/SystemInterpreter.cpp",
    "interpreter/platform/unix/TimeSupport.cpp",
    "interpreter/platform/unix/UseridFunction.cpp",
    "interpreter/platform/unix/ValueFunction.cpp",
    "interpreter/runtime/InternalPackage.cpp",
    "interpreter/runtime/Interpreter.cpp",
    "interpreter/runtime/InterpreterInstance.cpp",
    "interpreter/runtime/Numerics.cpp",
    "interpreter/runtime/Version.cpp",
    "interpreter/streamLibrary/FileNative.cpp",
    "interpreter/streamLibrary/StreamCommandParser.cpp",
    "interpreter/streamLibrary/StreamNative.cpp",
    "rexxapi/client/ClientMessage.cpp",
    "rexxapi/client/LocalAPIContext.cpp",
    "rexxapi/client/LocalAPIManager.cpp",
    "rexxapi/client/LocalMacroSpaceManager.cpp",
    "rexxapi/client/LocalQueueManager.cpp",
    "rexxapi/client/LocalRegistrationManager.cpp",
    "rexxapi/client/MacroSpaceApi.cpp",
    "rexxapi/client/platform/barrelfish/SysLegacyAPI.cpp",
    "rexxapi/client/platform/barrelfish/SysLocalAPIManager.cpp",
    "rexxapi/client/QueuesAPI.cpp",
    "rexxapi/client/RegistrationAPI.cpp",
    "rexxapi/common/platform/barrelfish/SysAPIManager.cpp",
    "rexxapi/common/platform/barrelfish/SysCSStream.cpp",
    "rexxapi/common/platform/barrelfish/SysProcess.cpp",
    "rexxapi/common/RegistrationTable.cpp",
    "rexxapi/common/ServiceMessage.cpp",
}

sourcesOorexx = {
    --"rexxapi/server/APIServer.cpp",
    --"rexxapi/server/APIServerInstance.cpp",
    --"rexxapi/server/APIServerThread.cpp",
    --"rexxapi/server/MacroSpaceManager.cpp",
    --"rexxapi/server/platform/unix/linux/APIService.cpp",
    --"rexxapi/server/QueueManager.cpp",
    --"rexxapi/server/RegistrationManager.cpp",
    --"samples/native.api/call.example/runRexxProgram.cpp",
    --"samples/native.api/call.example/stackOverflow.cpp",
    --"samples/unix/api/callrexx/callrexx1.cpp",
    --"testbinaries/orxclassic.cpp",
    --"testbinaries/orxclassicexits.cpp",
    --"testbinaries/orxfunction.cpp",
    --"testbinaries/orxinstance.cpp",
    --"testbinaries/orxinvocation.cpp",
    --"testbinaries/orxmethod.cpp",
    --"testbinaries/rexxinstance.cpp",
    --"utilities/rexxc/platform/unix/RexxCompiler.cpp",
    --"utilities/rexximage/rexximage.cpp",
    "utilities/rexx/platform/barrelfish/rexx.cpp",
    --"utilities/rxqueue/platform/unix/rxqueue.cpp",
    --"utilities/rxsubcom/platform/unix/rxsubcom.cpp"
}
sourcesRexximage = {
    --"rexxapi/server/APIServer.cpp",
    --"rexxapi/server/APIServerInstance.cpp",
    --"rexxapi/server/APIServerThread.cpp",
    --"rexxapi/server/MacroSpaceManager.cpp",
    --"rexxapi/server/platform/unix/linux/APIService.cpp",
    --"rexxapi/server/QueueManager.cpp",
    --"rexxapi/server/RegistrationManager.cpp",
    --"samples/native.api/call.example/runRexxProgram.cpp",
    --"samples/native.api/call.example/stackOverflow.cpp",
    --"samples/unix/api/callrexx/callrexx1.cpp",
    --"testbinaries/orxclassic.cpp",
    --"testbinaries/orxclassicexits.cpp",
    --"testbinaries/orxfunction.cpp",
    --"testbinaries/orxinstance.cpp",
    --"testbinaries/orxinvocation.cpp",
    --"testbinaries/orxmethod.cpp",
    --"testbinaries/rexxinstance.cpp",
    --"utilities/rexxc/platform/unix/RexxCompiler.cpp",
    "utilities/rexximage/platform/barrelfish/rexximage.cpp",
    --"utilities/rexx/platform/barrelfish/rexx.cpp",
    --"utilities/rxqueue/platform/unix/rxqueue.cpp",
    --"utilities/rxsubcom/platform/unix/rxsubcom.cpp"
}

sourcesRexxAPIServer = {
    "rexxapi/server/APIServer.cpp",
    "rexxapi/server/APIServerInstance.cpp",
    "rexxapi/server/APIServerThread.cpp",
    "rexxapi/server/MacroSpaceManager.cpp",
    "rexxapi/server/platform/unix/linux/APIService.cpp",
    "rexxapi/server/QueueManager.cpp",
    "rexxapi/server/RegistrationManager.cpp",
}

oorexxCxxFlags = {
    '-DOOREXX_COPY_YEAR=\\"2005-2015\\"',
--        "-DOPSYS_LINUX",
    '-DORX_CATDIR=\\"\\"',
    "-DORX_FIX=0",
    "-DORX_MOD=0",
    "-DORX_REL=0",
    '-DORX_SHARED_LIBRARY_EXT=\\"\\"',
    '-DORX_SYS_STR=\\"Barrelfish\\"',
    "-DORX_VER=5",
    "-D_GNU_SOURCE",
    "-D_POSIX_THREADS",
    "-Drexx_EXPORTS",
--        "-Wno-implicit-function-declaration",
    "-Wno-unused-function",
    "-Wno-format",
    "-Wno-uninitialized",
    "-Wno-redundant-decls",
    "-Wno-missing-declarations",
    "-Wno-sign-compare",
    "-Wno-unused-variable",
    "-Wno-switch",
--        "-Wno-missing-prototypes",
   "-Wno-shadow", 
--        "-D_CRT_SECURE_NO_DEPRECATE", 
    "-Wno-reorder",
    "-Wno-comment",
}

oorexxCFlags = {
}

oorexxIncludes = {
    "api/platform/unix",
    "api",
    "build",
    "lib",
    "common",
    "common/platform/unix",
    "interpreter",
    "interpreter/behaviour",
    "interpreter/execution",
    "interpreter/memory",
    "interpreter/package",
    "interpreter/concurrency",
    "interpreter/expression",
    "interpreter/instructions",
    "interpreter/classes",
    "interpreter/classes/support",
    "interpreter/runtime",
    "interpreter/parser",
    "interpreter/messages",
    "interpreter/streamLibrary",
    "interpreter/platform/common",
    "interpreter/platform/unix",
    "rexxapi/client",
    "rexxapi/client/platform/barrelfish",
    "rexxapi/common",
    "rexxapi/common/platform/barrelfish",
    "rexxapi/server",
    "rexxapi/server/platform/unix",
}

buildCLibrary {
    target = "rexxapi_binding",
    cFiles = {"rexxapi/common/platform/barrelfish/rexxapi_bindings.c"},
    addIncludes = oorexxIncludes,
    addCFlags = oorexxCFlags,
    architectures = {"x86_64"},
}

buildCApplication {
    target = "rexxapi_test",
    cFiles = {"rexxapi/common/platform/barrelfish/rexxapi_test.c"},
    bindings = { "rexxapi" },
    addIncludes = oorexxIncludes,
    addCFlags = oorexxCFlags,
    architectures = {"x86_64"},
    addLibraries = libDeps({"rexxapi_binding"})
}

buildCxxLibrary {
    target = "rexx",
    cxxFiles = sourcesLibrexx,
    addIncludes = oorexxIncludes,
    addCxxFlags = oorexxCxxFlags,
    architectures = {"x86_64"},
    addLibraries = libDeps({"posixcompat", "cxxabi_unwind_c"})
}

buildCxxApplication { 
    target = "rexx",
    cxxFiles = sourcesOorexx,
    addIncludes = oorexxIncludes,
    addCFlags = oorexxCxxFlags,
    bindings = { "rexxapi" },
    architectures = {"x86_64"},
    addLibraries = libDeps({"rexx", "rexxapi_binding"})
}

buildCxxApplication { 
    target = "rxapi",
    cxxFiles = sourcesRexxAPIServer,
    addIncludes = oorexxIncludes,
    bindings = { "rexxapi" },
    addCFlags = oorexxCxxFlags,
    architectures = {"x86_64"},
    addLibraries = libDeps({"rexx", "rexxapi_binding"})
}

buildCxxApplication { 
    target = "rexximage",
    cxxFiles = sourcesRexximage,
    addIncludes = oorexxIncludes,
    bindings = { "rexxapi" },
    addCFlags = oorexxCxxFlags,
    architectures = {"x86_64"},
    addLibraries = libDeps({"rexx", "rexxapi_binding"})
}

ramfs_files = {}
tup.append_table(ramfs_files, tup.glob("interpreter/RexxClasses/*.orx"))

tup.frule{
    input = ramfs_files,
    command = '(cd interpreter/RexxClasses; basename -a %f | cpio -oV | gzip -c > ../../%o)',
    output = TOP.."/rexximage_ramfs.cpio.gz"
}
