/*----------------------------------------------------------------------------*/
/*                                                                            */
/* Copyright (c) 1995, 2004 IBM Corporation. All rights reserved.             */
/* Copyright (c) 2005-2006 Rexx Language Association. All rights reserved.    */
/*                                                                            */
/* This program and the accompanying materials are made available under       */
/* the terms of the Common Public License v1.0 which accompanies this         */
/* distribution. A copy is also available at the following address:           */
/* http://www.oorexx.org/license.html                          */
/*                                                                            */
/* Redistribution and use in source and binary forms, with or                 */
/* without modification, are permitted provided that the following            */
/* conditions are met:                                                        */
/*                                                                            */
/* Redistributions of source code must retain the above copyright             */
/* notice, this list of conditions and the following disclaimer.              */
/* Redistributions in binary form must reproduce the above copyright          */
/* notice, this list of conditions and the following disclaimer in            */
/* the documentation and/or other materials provided with the distribution.   */
/*                                                                            */
/* Neither the name of Rexx Language Association nor the names                */
/* of its contributors may be used to endorse or promote products             */
/* derived from this software without specific prior written permission.      */
/*                                                                            */
/* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS        */
/* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT          */
/* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS          */
/* FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT   */
/* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,      */
/* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED   */
/* TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,        */
/* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY     */
/* OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING    */
/* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS         */
/* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.               */
/*                                                                            */
/*----------------------------------------------------------------------------*/
/******************************************************************************/
/* REXX Macros                                                  rexxsomm.cmd  */
/*                                                                            */
/* All standalone methods needed by SOM Support                               */
/*                                                                            */
/******************************************************************************/
/* Get installed into a directory for use later on*/

.environment["!SOMMETHODS"] = .METHODS

/* ************************************ */
/*  S C L A S S         M E T H O D S   */
/* ************************************ */
::METHOD sclass_new
  /* create a new instance of the class (SOM and Oryx parts) */
    inst = self~somNew

    signal on syntax                   /* trap init errors              */
    forward to (inst) message 'INIT' continue
    return inst

syntax:
    raise propagate                    /* reraise any init errors       */

::method sclass_!import
  self~!import:.class                  /* 1st do entire import.         */
                                       /* Make sure local server knows  */
                                       /*  about imported class         */
  .localServer~setid(self, self~!somclass)
  self~initProxy(self~!somclass)       /* initialize proxy part         */

::method sclass_somproxy unguarded
 /* return corresponding SOM class proxy */
                                       /* return the proxy equivalent       */
  return self~server~make_proxy(self~!somclass)

::METHOD dsclass_new
                                       /* create a new instance of the      */
                                       /*class (SOM and Oryx parts)         */
    inst = self~somdNew

    signal on syntax                   /* trap init errors              */
    forward to (inst) message 'INIT' continue
    return inst

syntax:
    raise propagate                    /* reraise any init errors       */

